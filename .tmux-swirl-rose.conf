#! ========================================================================== !#
#!                    ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
#!                    ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#!                       ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#!                       ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#!                       ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#!                       ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
#!                            - Made by @ashgw -
# ===================================================================
# tmux — Rose Noir variant (single-accent pink), cohesive with dark UI
# ===================================================================

# Reset all keys to defaults before applying ours
run-shell '\
  f=$(mktemp) \
  && tmux -f /dev/null -L temp start-server \; list-keys > "$f" \
  && tmux unbind -a \; source-file "$f"'

# Default shell/command
set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# Prefix key to Ctrl-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Indexing
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Window navigation
unbind n
unbind p
bind h previous-window
bind l next-window

# Pane resizing with Alt + hjkl
bind -n M-h resize-pane -L 5
bind -n M-j resize-pane -D 5
bind -n M-k resize-pane -U 5
bind -n M-l resize-pane -R 5

# Splits and new windows
unbind '"'
unbind %
unbind c
bind n new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -p 20 -c "#{pane_current_path}"
bind c split-window -v -c "#{pane_current_path}" \; send-keys "git commit" Enter

# Pane management
bind b break-pane -d
bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# Reload
bind r source-file ~/.tmux.conf \; display-message "tmux config reloaded!"

# QoL
set -g allow-rename off
set -g mouse on
set -g set-clipboard on
unbind -T copy-mode-vi MouseDragEnd1Pane
set -sg escape-time 0

# Copy mode (vi)
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard -in"
unbind -T copy-mode-vi Enter
bind   -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection clipboard -in"
unbind -T copy-mode-vi Space
bind   -T copy-mode-vi Space send -X jump-again
bind   -T copy-mode-vi 0 send -X back-to-indentation
bind y run-shell 'tmux save-buffer - | xclip -selection clipboard -in'
bind C-y run-shell 'tmux save-buffer - | xclip -selection clipboard -in'

# Vim friendly pane nav
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|[ln]?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}'   '' 'select-pane -L' }
bind -n C-j if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind -n C-k if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}'    '' 'select-pane -U' }
bind -n C-l if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}'  '' 'select-pane -R' }
bind -T copy-mode-vi C-h if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -T copy-mode-vi C-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi C-k if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -T copy-mode-vi C-l if -F '#{pane_at_right}'  '' 'select-pane -R'

# Terminal and colors
set -g default-terminal "xterm-256color"
set -as terminal-overrides ",*:Tc"

# ================= Rose Noir palette =================
# base      #0b0e14   very dark
# text      #e6d0d6   soft light
# rose      #ff7eb6   primary accent
# rose2     #ff4d94   stronger accent
# roseDim   #4b1f35   muted border fill

# Borders and messages
set -g pane-border-style         "fg=#2c1b26"
set -g pane-active-border-style  "fg=#ff7eb6"
set -g message-style             "bg=#ff7eb6,fg=#0b0e14"
set -g message-command-style     "bg=#ff7eb6,fg=#0b0e14"

# ================= Bubble statusline =================
set -g status on
set -g status-interval 1
set -g status-position bottom
set -g status-justify left
set -g status-left-length 80
set -g status-right-length 160
set -g status-style "bg=default,fg=#e6d0d6"

# Left bubble: session
set -g status-left "#[fg=#ff7eb6]#[bg=#ff7eb6]#[fg=#0b0e14]#[bold]   #S #[nobold]#[fg=#ff7eb6]#[bg=default] "

# Right bubbles: prefix flag, git branch, host, time — all rose
set -g status-right '#{?client_prefix,#[fg=#ff4d94]#[bg=#ff4d94]#[fg=#0b0e14]#[bold] ⏽ PREFIX #[nobold]#[fg=#ff4d94]#[bg=default] ,}#[fg=#ff7eb6]#[bg=#ff7eb6]#[fg=#0b0e14]  #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "-") #[fg=#ff7eb6]#[bg=default] #[fg=#ff4d94]#[bg=#ff4d94]#[fg=#0b0e14] #H #[fg=#ff4d94]#[bg=default] #[fg=#ff7eb6]#[bg=#ff7eb6]#[fg=#0b0e14] %Y-%m-%d %H:%M #[fg=#ff7eb6]#[bg=default]'

# Window tabs
set -g window-status-separator ""
set -g window-status-format         " #[fg=#2c1b26]#I #[fg=#e6d0d6]#W "
set -g window-status-current-format "#[fg=#ff7eb6]#[bg=#ff7eb6]#[fg=#0b0e14]#[bold] #I: #W #[nobold]#[fg=#ff7eb6]#[bg=default]"

# ================= TPM auto install and plugins =================
if-shell '[ ! -d ~/.tmux/plugins/tpm ]' \
  'run-shell "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

run-shell '~/.tmux/plugins/tpm/tpm'
# ===================================================================
