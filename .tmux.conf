#! ========================================================================== !#
#!                    ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
#!                    ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#!                       ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#!                       ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#!                       ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#!                       ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
#!                            - Made by @ashgw -
# ===================================================================
# tmux - Catppuccin Mocha bubble status, matching Neovim
# single source of truth, TPM auto install for resurrect/continuum
# ===================================================================

# Reset all keys to defaults before applying ours
run-shell '\
  f=$(mktemp) \
  && tmux -f /dev/null -L temp start-server \; list-keys > "$f" \
  && tmux unbind -a \; source-file "$f"'

# Default shell/command
set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# Prefix key to Ctrl-a (screen style)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Start window/pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Window navigation bindings
unbind n
unbind p
bind h previous-window
bind l next-window

# Pane resizing with Alt + hjkl
bind -n M-h resize-pane -L 5
bind -n M-j resize-pane -D 5
bind -n M-k resize-pane -U 5
bind -n M-l resize-pane -R 5

# Splitting & new windows
unbind '"'
unbind %
unbind c
bind n new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -p 20 -c "#{pane_current_path}"
bind c split-window -v -c "#{pane_current_path}" \; send-keys "git commit" Enter

# Pane management
bind b break-pane -d
bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# Reload config
bind r source-file ~/.tmux.conf \; display-message "tmux config reloaded!"

# General quality of life
set -g allow-rename off
set -g mouse on
set -g set-clipboard on
unbind -T copy-mode-vi MouseDragEnd1Pane
set -sg escape-time 0

# Copy mode (vi-style)
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard -in"
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -selection clipboard -in"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind -T copy-mode-vi 0 send -X back-to-indentation
bind y run-shell 'tmux save-buffer - | xclip -selection clipboard -in'
bind C-y run-shell 'tmux save-buffer - | xclip -selection clipboard -in'

# Vim-friendly pane navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|[ln]?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind -n C-j if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind -n C-k if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind -n C-l if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind -T copy-mode-vi C-h if -F '#{pane_at_left}' '' 'select-pane -L'
bind -T copy-mode-vi C-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi C-k if -F '#{pane_at_top}' '' 'select-pane -U'
bind -T copy-mode-vi C-l if -F '#{pane_at_right}' '' 'select-pane -R'

# Terminal & colors
set -g default-terminal "xterm-256color"
set -as terminal-overrides ",*:Tc"

# ================= Catppuccin Mocha palette =================
# base  #1e1e2e   text  #cdd6f4   surface1 #45475a
# blue  #89b4fa   mauve #cba6f7   green    #a6e3a1
# peach #fab387   yellow #f9e2af

# Borders and messages
set -g pane-border-style "fg=#45475a"
set -g pane-active-border-style "fg=#89b4fa"
set -g message-style "bg=#89b4fa,fg=black"
set -g message-command-style "bg=#89b4fa,fg=black"

# ================= Bubble statusline =================
set -g status on
set -g status-interval 1
set -g status-position bottom
set -g status-justify left
set -g status-left-length 80
set -g status-right-length 160
set -g status-style "bg=default,fg=#cdd6f4"

# Left bubble: session
set -g status-left "#[fg=#89b4fa]#[bg=#89b4fa]#[fg=#1e1e2e]#[bold]   #S #[nobold]#[fg=#89b4fa]#[bg=default] "

# Right bubbles: prefix flag (conditional), git branch, host, time
# Important: no commas inside the conditional parts
set -g status-right '#{?client_prefix,#[fg=#a6e3a1]#[bg=#a6e3a1]#[fg=#1e1e2e]#[bold] ⏽ PREFIX #[nobold]#[fg=#a6e3a1]#[bg=default] ,}#[fg=#cba6f7]#[bg=#cba6f7]#[fg=#1e1e2e]  #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "-") #[fg=#cba6f7]#[bg=default] #[fg=#fab387]#[bg=#fab387]#[fg=#1e1e2e] #H #[fg=#fab387]#[bg=default] #[fg=#89b4fa]#[bg=#89b4fa]#[fg=#1e1e2e] %Y-%m-%d %H:%M #[fg=#89b4fa]#[bg=default]'

# Window tabs
set -g window-status-separator ""
set -g window-status-format " #[fg=#45475a]#I #[fg=#cdd6f4]#W "
set -g window-status-current-format "#[fg=#f9e2af]#[bg=#f9e2af]#[fg=#1e1e2e]#[bold] #I: #W #[nobold]#[fg=#f9e2af]#[bg=default]"

# ================= TPM auto install =================
if-shell '[ ! -d ~/.tmux/plugins/tpm ]' \
  'run-shell "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

# Run TPM
run-shell '~/.tmux/plugins/tpm/tpm'
# ===================================================================
