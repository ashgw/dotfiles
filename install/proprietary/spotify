set -Eeuo pipefail

say(){ printf "\033[36m%s\033[0m\n" "$*"; }
ok(){  printf "\033[32m%s\033[0m\n" "$*"; }
warn(){printf "\033[33m%s\033[0m\n" "$*"; }
err(){ printf "\033[31m%s\033[0m\n" "$*" >&2; }

say "1) Reinstall spotify-client + XWayland (for Hyprland)"
sudo apt update -y
sudo apt install -y spotify-client xwayland

say "2) Make Chromium sandbox usable (needed by Spotify's CEF)"
# If user namespaces are disabled, enable them (safer than --no-sandbox)
if [[ "$(sysctl -n kernel.unprivileged_userns_clone 2>/dev/null || echo 0)" -eq 0 ]]; then
  echo "kernel.unprivileged_userns_clone=1" | sudo tee /etc/sysctl.d/99-allow-userns.conf >/dev/null
  sudo sysctl --system >/dev/null
fi

# If a setuid chrome-sandbox exists in Spotify's dir, ensure correct perms
for s in /usr/share/spotify/chrome-sandbox /opt/spotify/chrome-sandbox; do
  if [[ -e "$s" ]]; then
    sudo chown root:root "$s" || true
    sudo chmod 4755 "$s" || true
  fi
done

say "3) Purge bad caches/configs (safe; Spotify will recreate them)"
rm -rf "$HOME/.cache/spotify" "$HOME/.config/spotify"

say "4) Create a wrapper that prefers Wayland but falls back to XWayland"
mkdir -p "$HOME/.local/bin" "$HOME/.local/share/applications"
cat > "$HOME/.local/bin/spotify-real" <<'EOF'
#!/usr/bin/env bash
set -euo pipefail
# First try native Wayland (Ozone); if it fails, retry without flags (XWayland)
if /usr/bin/spotify --show-console \
      --enable-features=UseOzonePlatform --ozone-platform=wayland \
      --enable-wayland-ime "$@" ; then
  exit 0
fi
# Fallback (XWayland)
exec /usr/bin/spotify --show-console "$@"
EOF
chmod +x "$HOME/.local/bin/spotify-real"

# Shadow the system 'spotify' for terminal usage
cat > "$HOME/.local/bin/spotify" <<'EOF'
#!/usr/bin/env bash
exec "$HOME/.local/bin/spotify-real" "$@"
EOF
chmod +x "$HOME/.local/bin/spotify"

# Desktop launcher override so clicking the icon uses our wrapper
sysdesk="/usr/share/applications/spotify.desktop"
if [[ -r "$sysdesk" ]]; then
  sed -E 's|^Exec=spotify.*|Exec='"$HOME"'/.local/bin/spotify %U|' "$sysdesk" \
    > "$HOME/.local/share/applications/spotify.desktop"
  update-desktop-database "$HOME/.local/share/applications" 2>/dev/null || true
fi

say "5) Launching…"
"$HOME/.local/bin/spotify" || {
  warn "Retrying with GPU acceleration disabled…"
  "$HOME/.local/bin/spotify" --disable-gpu || true
}

ok "Done. If the window still doesn't show, run this to see logs:"
echo "   spotify --show-console --log-file '$HOME/.cache/spotify_cef.log'"

