#!/usr/bin/env bash
set -Eeuo pipefail

# Reexec with bash if needed
if [ -z "${BASH_VERSION:-}" ]; then exec bash "$0" "$@"; fi

have(){ command -v "$1" >/dev/null 2>&1; }
as_root(){ if [ "${EUID:-$(id -u)}" -ne 0 ]; then sudo "$@"; else "$@"; fi; }

log(){ printf "[cava] %s\n" "$*"; }

install_pkgs() {
  log "apt update"
  as_root apt-get update -y

  local pkgs=(cava pipewire pipewire-pulse)
  local need=()
  for p in "${pkgs[@]}"; do dpkg -s "$p" >/dev/null 2>&1 || need+=("$p"); done
  if [ "${#need[@]}" -gt 0 ]; then
    log "install ${need[*]}"
    as_root apt-get install -y "${need[@]}"
  else
    log "packages already present"
  fi
}

write_cava_config() {
  mkdir -p "$HOME/.config/cava"
  local cfg="$HOME/.config/cava/config"
  if [ -f "$cfg" ]; then
    log "config exists at $cfg (leaving it)"
    return
  fi

  cat > "$cfg" <<'EOF'
[general]
framerate = 60
bars = 90
bar_width = 2
bar_spacing = 1
method = pulse
source = auto

[output]
method = ncurses
channels = mono
mono_option = average
autosens = 1

[color]
gradient = 1
gradient_count = 6
gradient_color_1 = '#8aadf4'
gradient_color_2 = '#7dc4e4'
gradient_color_3 = '#91d7e3'
gradient_color_4 = '#a6da95'
gradient_color_5 = '#eed49f'
gradient_color_6 = '#ed8796'
EOF
  log "wrote $cfg"
}

detect_term() {
  if have kitty; then echo "kitty"; return; fi
  if have alacritty; then echo "alacritty"; return; fi
  if have foot; then echo "foot"; return; fi
  if have wezterm; then echo "wezterm"; return; fi
  echo "xterm"
}

install_toggle() {
  mkdir -p "$HOME/.local/bin"
  local bin="$HOME/.local/bin/cava-toggle"
  local term; term="$(detect_term)"

  cat > "$bin" <<'EOS'
#!/usr/bin/env bash
set -Eeuo pipefail

is_running() { pgrep -xaf "class cava-float.*cava" >/dev/null 2>&1 || pgrep -xaf "title CAVA.*cava" >/dev/null 2>&1; }

launch_kitty() {
  exec kitty \
    --class cava-float \
    --title "CAVA" \
    --override "font_size 12" \
    --override "initial_window_width 960c" \
    --override "initial_window_height 22c" \
    bash -lc 'cava'
}

launch_alacritty() {
  exec alacritty \
    --class cava-float \
    -t "CAVA" \
    -o window.dimensions.columns=140 \
    -o window.dimensions.lines=24 \
    -e bash -lc 'cava'
}

launch_foot() {
  exec foot --app-id cava-float -T "CAVA" bash -lc 'cava'
}

launch_wezterm() {
  exec wezterm start --class cava-float --title "CAVA" -- bash -lc 'cava'
}

launch_xterm() {
  exec xterm -class cava-float -T "CAVA" -fa monospace -fs 12 -e bash -lc 'cava'
}

if is_running; then
  pkill -xaf "cava-float.*cava" || pkill -xaf "CAVA.*cava" || true
  exit 0
fi

TERM_CHOICE="${TERM_CHOICE:-}"
case "${TERM_CHOICE}" in
  kitty) launch_kitty ;;
  alacritty) launch_alacritty ;;
  foot) launch_foot ;;
  wezterm) launch_wezterm ;;
  xterm|"") ;; # fall through to auto detect below
esac

# Auto detect if not forced
if command -v kitty >/dev/null 2>&1; then launch_kitty; fi
if command -v alacritty >/dev/null 2>&1; then launch_alacritty; fi
if command -v foot >/dev/null 2>&1; then launch_foot; fi
if command -v wezterm >/dev/null 2>&1; then launch_wezterm; fi
launch_xterm
EOS
  chmod +x "$bin"
  log "installed toggle at $bin using terminal: $term"
}

write_hypr_rules() {
  local dir="$HOME/.config/hypr"
  mkdir -p "$dir"
  local rules="$dir/cava.rules"
  if [ -f "$rules" ]; then
    log "Hypr rules already exist at $rules (leaving them)"
  else
    cat > "$rules" <<'EOF'
# CAVA floating utility window
windowrulev2 = float,class:^(cava-float)$
windowrulev2 = size 960 400,class:^(cava-float)$
windowrulev2 = move 20 40,class:^(cava-float)$
windowrulev2 = nofocus,class:^(cava-float)$
windowrulev2 = pin,class:^(cava-float)$
EOF
    log "wrote Hyprland rules to $rules"
    log "add this include to your hyprland.conf if not present:  source=~/.config/hypr/cava.rules"
  fi
}

main() {
  install_pkgs
  write_cava_config
  install_toggle
  write_hypr_rules

  printf "\nUsage:\n"
  printf "  ~/.local/bin/cava-toggle     # toggle the floating visualizer\n"
  printf "Hyprland bind example:\n"
  printf "  bind = , F9, exec, ~/.local/bin/cava-toggle\n\n"
}
main "$@"

